{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","Keyboard","Platform","useIsKeyboardShown","isKeyboardShown","setIsKeyboardShown","useState","useEffect","handleKeyboardShow","handleKeyboardHide","OS","subscrA","addListener","subscrB","remove"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9C;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,UAAMC,kBAAkB,GAAG,MAAMH,kBAAkB,CAAC,IAAD,CAAnD;;AACA,UAAMI,kBAAkB,GAAG,MAAMJ,kBAAkB,CAAC,KAAD,CAAnD;;AAEA,QAAIH,QAAQ,CAACQ,EAAT,KAAgB,KAApB,EAA2B;AACzB,YAAMC,OAAO,GAAGV,QAAQ,CAACW,WAAT,CACd,kBADc,EAEdJ,kBAFc,CAAhB;AAIA,YAAMK,OAAO,GAAGZ,QAAQ,CAACW,WAAT,CACd,kBADc,EAEdH,kBAFc,CAAhB;AAKA,aAAO,MAAM;AACXE,QAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,MAAT;AACAD,QAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,MAAT;AACD,OAHD;AAID,KAdD,MAcO;AACL,YAAMH,OAAO,GAAGV,QAAQ,CAACW,WAAT,CACd,iBADc,EAEdJ,kBAFc,CAAhB;AAIA,YAAMK,OAAO,GAAGZ,QAAQ,CAACW,WAAT,CACd,iBADc,EAEdH,kBAFc,CAAhB;AAKA,aAAO,MAAM;AACXE,QAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,MAAT;AACAD,QAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,MAAT;AACD,OAHD;AAID;AACF,GAjCD,EAiCG,EAjCH;AAmCA,SAAOV,eAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      const subscrA = Keyboard.addListener(\n        'keyboardWillShow',\n        handleKeyboardShow\n      );\n      const subscrB = Keyboard.addListener(\n        'keyboardWillHide',\n        handleKeyboardHide\n      );\n\n      return () => {\n        subscrA?.remove();\n        subscrB?.remove();\n      };\n    } else {\n      const subscrA = Keyboard.addListener(\n        'keyboardDidShow',\n        handleKeyboardShow\n      );\n      const subscrB = Keyboard.addListener(\n        'keyboardDidHide',\n        handleKeyboardHide\n      );\n\n      return () => {\n        subscrA?.remove();\n        subscrB?.remove();\n      };\n    }\n  }, []);\n\n  return isKeyboardShown;\n}\n"]}